<!--

    Copyright (C) 2016 UniKnow (info.uniknow@gmail.com)

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

            http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.

-->
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>org.uniknow.agiledev.docMockRest</groupId>
        <artifactId>DocMockRest-Root</artifactId>
        <version>0.0.2-SNAPSHOT</version>
    </parent>

    <artifactId>DocMockRest</artifactId>
    <name>DocMockRest</name>
    <description>
        Framework for documenting and mocking REST API based on RAML specification file.
    </description>

    <scm>
        <connection>scm:git:ssh://bitbucket.org:uniknow/docmockrest.git</connection>
        <url>https://bitbucket.org/uniknow/docmockrest.git</url>
        <developerConnection>scm:git:ssh://bitbucket.org:uniknow/docmockrest.git
        </developerConnection>
        <tag>HEAD</tag>
    </scm>

    <issueManagement>
        <system>Issue Tracker</system>
        <url>https://bitbucket.org/uniknow/docmockrest/issues</url>
    </issueManagement>

    <properties>
        <maven.compiler.source>1.8</maven.compiler.source>
        <maven.compiler.target>1.8</maven.compiler.target>

        <project.build.sourceEncoding>
            UTF-8
        </project.build.sourceEncoding>
        <project.reporting.outputEncoding>
            UTF-8
        </project.reporting.outputEncoding>

        <!-- Properties for licensing -->
        <inceptionYear>2016</inceptionYear>
        <organizationName>UniKnow</organizationName>

        <!-- Properties for site documentation -->
        <site.url>http://uniknow.bitbucket.org/DocMockRest/</site.url>
        <scm-publish.scmBranch>master</scm-publish.scmBranch>
        <scm-publish.pubScmUrl>scm:git:https://bitbucket.org/uniknow/uniknow.bitbucket.org.git</scm-publish.pubScmUrl>
        <siteOutputDirectory>${project.build.directory}/site/${project.artifactId}</siteOutputDirectory>
        <scm-publish.siteDocOuputDirectory>${project.build.directory}/site</scm-publish.siteDocOuputDirectory>

        <!-- Version information dependencies -->
        <asciidoctor.diagram>1.2.1</asciidoctor.diagram>
        <asciidoctor.maven.plugin.version>1.5.3</asciidoctor.maven.plugin.version>
        <asciidoctorj.version>1.5.4</asciidoctorj.version>
        <asciidoctorj.diagram>1.3.1</asciidoctorj.diagram>
        <asciidoctorj.pdf.version>1.5.0-alpha.11</asciidoctorj.pdf.version>
        <aspectj.version>1.8.7</aspectj.version>
        <dbc4java.version>0.1.13</dbc4java.version>
        <easymock.version>3.4</easymock.version>
        <jruby.version>1.7.24</jruby.version>

    </properties>

    <dependencies>
        <!-- Start: Test Dependencies -->
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
        </dependency>
        <dependency>
            <groupId>org.easymock</groupId>
            <artifactId>easymock</artifactId>
        </dependency>

        <dependency>
            <groupId>org.uniknow.agiledev.docMockRest</groupId>
            <artifactId>example-swagger-annotated</artifactId>
            <version>${project.version}</version>
            <!-- Temporary removed scope to test mock server as standalone -->
            <!--<scope>test</scope>-->
        </dependency>


        <!-- End: Test Dependencies -->

        <!-- Start: Design by Contract dependencies-->
        <dependency>
            <groupId>org.uniknow.agiledev</groupId>
            <artifactId>dbc4java</artifactId>
        </dependency>
        <dependency>
            <groupId>org.aspectj</groupId>
            <artifactId>aspectjrt</artifactId>
        </dependency>
        <dependency>
            <groupId>org.aspectj</groupId>
            <artifactId>aspectjweaver</artifactId>
        </dependency>
        <!-- End: Design by Contract dependencies-->

        <!-- Start: Dependencies RAML2HTML converter -->
        <dependency>
            <groupId>com.github.jknack</groupId>
            <artifactId>handlebars</artifactId>
        </dependency>
        <dependency>
            <groupId>com.github.jknack</groupId>
            <artifactId>handlebars-markdown</artifactId>
        </dependency>
        <!-- End: Dependencies RAML2HTML converter -->

        <!-- Dependency for mocking API responses -->
        <dependency>
            <groupId>com.github.tomakehurst</groupId>
            <artifactId>wiremock</artifactId>
        </dependency>

        <!-- Dependency for RAML -->
        <dependency>
            <groupId>org.raml</groupId>
            <artifactId>raml-parser</artifactId>
        </dependency>

        <!-- START: Dependencies for Swagger -->
        <dependency>
            <groupId>io.swagger</groupId>
            <artifactId>swagger-jaxrs</artifactId>
        </dependency>
        <dependency>
            <groupId>io.swagger</groupId>
            <artifactId>swagger-parser</artifactId>
        </dependency>
        <dependency>
            <groupId>io.swagger</groupId>
            <artifactId>swagger-core</artifactId>
        </dependency>
        <dependency>
            <groupId>org.reflections</groupId>
            <artifactId>reflections</artifactId>
        </dependency>
        <!-- END: Dependencies for Swagger -->



        <dependency>
            <groupId>com.squareup.okhttp3</groupId>
            <artifactId>okhttp</artifactId>
        </dependency>

        <!-- Dependency for easily parsing java arguments -->
        <dependency>
            <groupId>net.sf.jopt-simple</groupId>
            <artifactId>jopt-simple</artifactId>
        </dependency>

        <dependency>
            <groupId>javax.ws.rs</groupId>
            <artifactId>javax.ws.rs-api</artifactId>
        </dependency>

        <dependency>
            <groupId>com.squareup.okhttp3</groupId>
            <artifactId>okhttp</artifactId>
        </dependency>

        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-core</artifactId>
        </dependency>

        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-databind</artifactId>
        </dependency>

        <dependency>
            <groupId>com.google.guava</groupId>
            <artifactId>guava</artifactId>
        </dependency>

        <dependency>
            <groupId>commons-logging</groupId>
            <artifactId>commons-logging</artifactId>
        </dependency>

        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-lang3</artifactId>
        </dependency>

        <dependency>
            <groupId>commons-collections</groupId>
            <artifactId>commons-collections</artifactId>
        </dependency>

        <dependency>
            <groupId>org.yaml</groupId>
            <artifactId>snakeyaml</artifactId>
        </dependency>

        <dependency>
            <groupId>org.json</groupId>
            <artifactId>json</artifactId>
        </dependency>

        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-annotations</artifactId>
        </dependency>

        <dependency>
            <groupId>com.google.code.findbugs</groupId>
            <artifactId>jsr305</artifactId>
        </dependency>

        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
        </dependency>

        <dependency>
            <groupId>joda-time</groupId>
            <artifactId>joda-time</artifactId>
        </dependency>

        <dependency>
            <groupId>com.fasterxml.jackson.dataformat</groupId>
            <artifactId>jackson-dataformat-yaml</artifactId>
        </dependency>
    </dependencies>

    <build>
        <plugins>



            <!--
            AspectJ compile time weaving. Required for Design by Contract
            -->
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>aspectj-maven-plugin</artifactId>
            </plugin>

            <!-- Plugin to measure code coverage -->
            <plugin>
                <groupId>org.jacoco</groupId>
                <artifactId>jacoco-maven-plugin</artifactId>
            </plugin>

            <plugin>
                <artifactId>maven-assembly-plugin</artifactId>
                <version>2.6</version>
                <configuration>
                    <archive>
                        <manifest>
                            <mainClass>org.uniknow.agiledev.docMockRest.MockServerStandalone</mainClass>
                        </manifest>
                    </archive>
                    <descriptors>
                        <descriptor>src/assembly/docMockRest.xml</descriptor>
                    </descriptors>
                </configuration>
                <executions>
                    <execution>
                        <phase>package</phase>
                        <goals>
                            <goal>single</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

</project>