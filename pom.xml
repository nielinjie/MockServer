<!--

    Copyright (C) 2016 UniKnow (info.uniknow@gmail.com)

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

            http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.

-->
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>org.uniknow.agiledev</groupId>
    <artifactId>DocMockRest</artifactId>
    <version>0.0.1-SNAPSHOT</version>
    <name>DocMockRest</name>
    <description>
        Framework for documenting and mocking REST API based on RAML specification file.
    </description>

    <scm>
        <connection>scm:git:ssh://bitbucket.org:uniknow/docmockrest.git</connection>
        <url>https://bitbucket.org/uniknow/docmockrest.git</url>
        <developerConnection>scm:git:ssh://bitbucket.org:uniknow/docmockrest.git
        </developerConnection>
        <tag>HEAD</tag>
    </scm>

    <issueManagement>
        <system>Issue Tracker</system>
        <url>https://bitbucket.org/uniknow/docmockrest/issues</url>
    </issueManagement>

    <properties>
        <maven.compiler.source>1.8</maven.compiler.source>
        <maven.compiler.target>1.8</maven.compiler.target>

        <project.build.sourceEncoding>
            UTF-8
        </project.build.sourceEncoding>
        <project.reporting.outputEncoding>
            UTF-8
        </project.reporting.outputEncoding>

        <!-- Properties for licensing -->
        <inceptionYear>2016</inceptionYear>
        <organizationName>UniKnow</organizationName>

        <!-- Properties for site documentation -->
        <site.url>http://uniknow.bitbucket.org/DocMockRest/</site.url>
        <scm-publish.scmBranch>master</scm-publish.scmBranch>
        <scm-publish.pubScmUrl>scm:git:https://bitbucket.org/uniknow/uniknow.bitbucket.org.git</scm-publish.pubScmUrl>
        <siteOutputDirectory>${project.build.directory}/site/${project.artifactId}</siteOutputDirectory>
        <scm-publish.siteDocOuputDirectory>${project.build.directory}/site</scm-publish.siteDocOuputDirectory>

        <!-- Version information dependencies -->
        <asciidoctor.diagram>1.2.1</asciidoctor.diagram>
        <asciidoctor.maven.plugin.version>1.5.3</asciidoctor.maven.plugin.version>
        <asciidoctorj.version>1.5.4</asciidoctorj.version>
        <asciidoctorj.diagram>1.3.1</asciidoctorj.diagram>
        <asciidoctorj.pdf.version>1.5.0-alpha.11</asciidoctorj.pdf.version>
        <aspectj.version>1.8.7</aspectj.version>
        <dbc4java.version>0.1.13</dbc4java.version>
        <easymock.version>3.4</easymock.version>
        <jruby.version>1.7.24</jruby.version>

    </properties>

    <dependencies>
        <!-- Start: Dependencies documentation -->
        <dependency>
            <groupId>rubygems</groupId>
            <artifactId>asciidoctor-diagram</artifactId>
            <version>${asciidoctor.diagram}</version>
            <type>gem</type>
            <scope>provided</scope>
            <exclusions>
                <exclusion>
                    <groupId>rubygems</groupId>
                    <artifactId>asciidoctor</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <!-- End: Dependencies documentation -->

        <!-- Start: Test Dependencies -->
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>4.11</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.easymock</groupId>
            <artifactId>easymock</artifactId>
            <version>${easymock.version}</version>
            <scope>test</scope>
        </dependency>
        <!-- End: Test Dependencies -->

        <!-- Start: Design by Contract dependencies-->
        <dependency>
            <groupId>org.uniknow.agiledev</groupId>
            <artifactId>dbc4java</artifactId>
            <version>${dbc4java.version}</version>
        </dependency>
        <dependency>
            <groupId>org.aspectj</groupId>
            <artifactId>aspectjrt</artifactId>
            <version>${aspectj.version}</version>
        </dependency>
        <dependency>
            <groupId>org.aspectj</groupId>
            <artifactId>aspectjweaver</artifactId>
            <version>${aspectj.version}</version>
        </dependency>
        <!-- End: Design by Contract dependencies-->

        <!-- Start: Dependencies RAML2HTML converter -->
        <dependency>
            <groupId>com.github.jknack</groupId>
            <artifactId>handlebars</artifactId>
            <version>4.0.5</version>
        </dependency>
        <dependency>
            <groupId>com.github.jknack</groupId>
            <artifactId>handlebars-markdown</artifactId>
            <version>4.0.5</version>
        </dependency>
        <!-- End: Dependencies RAML2HTML converter -->

        <!-- Dependency for mocking API responses -->
        <dependency>
            <groupId>com.github.tomakehurst</groupId>
            <artifactId>wiremock</artifactId>
            <version>1.58</version>
        </dependency>

        <!-- Dependency for RAML -->
        <dependency>
            <groupId>org.raml</groupId>
            <artifactId>raml-parser</artifactId>
            <version>0.8.13</version>
        </dependency>

        <!-- Dependency for JSON Schema validation -->
        <dependency>
            <groupId>org.everit.json</groupId>
            <artifactId>org.everit.json.schema</artifactId>
            <version>1.2.0</version>
        </dependency>

        <dependency>
            <groupId>com.squareup.okhttp3</groupId>
            <artifactId>okhttp</artifactId>
            <version>3.0.1</version>
        </dependency>

        <!-- Dependency for easily parsing java arguments -->
        <dependency>
            <groupId>net.sf.jopt-simple</groupId>
            <artifactId>jopt-simple</artifactId>
            <version>4.9</version>
        </dependency>

        <dependency>
            <groupId>javax.ws.rs</groupId>
            <artifactId>javax.ws.rs-api</artifactId>
            <version>2.0.1</version>
        </dependency>

    </dependencies>

    <build>
        <plugins>

            <plugin>
                <groupId>com.mycila</groupId>
                <artifactId>license-maven-plugin</artifactId>
                <version>2.11</version>
                <configuration>
                    <strictCheck>true</strictCheck>
                    <header>com/mycila/maven/plugin/license/templates/APACHE-2.txt</header>
                    <properties>
                        <owner>UniKnow</owner>
                        <email>info.uniknow@gmail.com</email>
                        <project.inceptionYear>2016</project.inceptionYear>
                    </properties>

                    <excludes>
                        <exclude>**/*.iml</exclude>
                        <exclude>target/**</exclude>
                        <exclude>.idea/**</exclude>
                        <exclude>src/test/resources/**</exclude>
                        <exclude>src/main/resources/**</exclude>
                    </excludes>

                </configuration>
                <executions>
                    <execution>
                        <goals>
                            <goal>format</goal>
                        </goals>
                        <phase>process-sources</phase>
                    </execution>
                </executions>
            </plugin>

            <!--
                Plugin for formatting java source files following specified
                code conventions. The formatter is based on the eclipse
                formatted and can use the exported xml formatting definitions
            -->
            <plugin>
                <groupId>com.googlecode.maven-java-formatter-plugin
                </groupId>
                <artifactId>maven-java-formatter-plugin</artifactId>
                <version>0.4</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>format</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <lineEnding>LF</lineEnding>
                    <configFile>${project.basedir}/src/build-configuration/formatter/uniknow.xml</configFile>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.1</version>
                <configuration>
                    <encoding>${project.build.sourceEncoding}</encoding>
                    <source>${maven.compiler.source}</source>
                    <target>${maven.compiler.target}</target>

                    <showDeprecation>true</showDeprecation>
                    <showWarnings>true</showWarnings>
                </configuration>
            </plugin>

            <!--
            AspectJ compile time weaving. Required for Design by Contract
            -->
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>aspectj-maven-plugin</artifactId>
                <version>1.7</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>compile</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <source>${maven.compiler.source}</source>
                    <target>${maven.compiler.target}</target>
                    <showWeaveInfo>true</showWeaveInfo>
                    <complianceLevel>${maven.compiler.target}</complianceLevel>

                    <encoding>${project.build.sourceEncoding}</encoding>

                    <weaveDependencies>
                        <weaveDependency>
                            <groupId>org.uniknow.agiledev</groupId>
                            <artifactId>dbc4java</artifactId>
                        </weaveDependency>
                    </weaveDependencies>
                </configuration>
                <dependencies>
                    <dependency>
                        <groupId>org.aspectj</groupId>
                        <artifactId>aspectjrt</artifactId>
                        <version>${aspectj.version}</version>
                    </dependency>
                    <dependency>
                        <groupId>org.aspectj</groupId>
                        <artifactId>aspectjtools</artifactId>
                        <version>${aspectj.version}</version>
                    </dependency>
                </dependencies>
            </plugin>

            <plugin>
                <artifactId>maven-assembly-plugin</artifactId>
                <version>2.6</version>
                <configuration>
                    <archive>
                        <manifest>
                            <mainClass>org.uniknow.agiledev.docMockRest.raml.MockServerStandalone</mainClass>
                        </manifest>
                    </archive>
                    <descriptors>
                        <descriptor>src/assembly/docMockRest.xml</descriptor>
                    </descriptors>
                </configuration>
                <executions>
                    <execution>
                        <phase>package</phase>
                        <goals>
                            <goal>single</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <!-- START: plugins site documentation -->
            <plugin>
                <groupId>de.saumya.mojo</groupId>
                <artifactId>gem-maven-plugin</artifactId>
                <version>1.0.10</version>
                <configuration>
                    <!-- align JRuby version with AsciidoctorJ to avoid redundant downloading -->
                    <jrubyVersion>1.7.9</jrubyVersion>
                    <gemHome>${project.build.directory}/gems</gemHome>
                    <gemPath>${project.build.directory}/gems</gemPath>
                </configuration>
                <executions>
                    <execution>
                        <phase>pre-site</phase>
                        <goals>
                            <goal>initialize</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <artifactId>maven-site-plugin</artifactId>
                <version>3.4</version>
                <configuration>
                    <outputDirectory>${siteOutputDirectory}</outputDirectory>
                    <asciidoc>
                        <attributes>
                            <site-url>${site.url}</site-url>
                            <project-name>${project.name}</project-name>
                            <issue-management>${issueManagement.url}</issue-management>
                            <imagesdir>${project.basedir}/src/site/resources/images</imagesdir>
                        </attributes>
                    </asciidoc>
                </configuration>
                <dependencies>
                    <dependency>
                        <groupId>org.asciidoctor</groupId>
                        <artifactId>asciidoctor-maven-plugin</artifactId>
                        <version>${asciidoctor.maven.plugin.version}</version>
                    </dependency>
                    <dependency>
                        <groupId>org.asciidoctor</groupId>
                        <artifactId>asciidoctorj-diagram</artifactId>
                        <version>${asciidoctorj.diagram}</version>
                    </dependency>
                    <dependency>
                        <groupId>org.asciidoctor</groupId>
                        <artifactId>asciidoctorj</artifactId>
                        <version>${asciidoctorj.version}</version>
                    </dependency>
                    <dependency>
                        <groupId>org.jruby</groupId>
                        <artifactId>jruby-complete</artifactId>
                        <version>${jruby.version}</version>
                    </dependency>
                </dependencies>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-scm-publish-plugin</artifactId>
                <version>1.1</version>
                <inherited>true</inherited>
                <configuration>
                    <checkoutDirectory>${project.build.directory}/scmpublish</checkoutDirectory>
                    <checkinComment>Publishing Site Docs for ${project.artifactId}:${project.version}</checkinComment>

                    <!-- Plugins defaults to "target/staging" and since the distributionManagement section is a pain in the ass for site docs, this is easier -->
                    <content>${scm-publish.siteDocOuputDirectory}</content>
                    <skipDeletedFiles>true</skipDeletedFiles>
                    <pubScmUrl>${scm-publish.pubScmUrl}</pubScmUrl>
                    <scmBranch>${scm-publish.scmBranch}</scmBranch>

                </configuration>
            </plugin>
            <!-- END: plugins site documentation -->
        </plugins>
    </build>

    <repositories>
        <repository>
            <id>rubygems-proxy-releases</id>
            <name>RubyGems.org Proxy (Releases)</name>
            <url>http://rubygems-proxy.torquebox.org/releases</url>
            <releases>
                <enabled>true</enabled>
            </releases>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
        </repository>
    </repositories>

</project>